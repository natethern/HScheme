(case-match '(hello) ()
	(() p)
	((a) (list a 'q))
)

(define get-type (lambda (x)
	(case-match x (q)
		(() 'empty)
		((a . b) 'pair)
		(q 'q)
		(a 'other)
	)
))

(define subst-other (lambda (x)
	(case-match x (b d)
		(() '())
		((a . b) (cons (subst-other a) (subst-other b)))
		(b 'bb)
		(d 'dd)
		(a 'x)
	)
))

(get-type 'pqr)
(get-type 'q)
(get-type '())
(get-type '(a (b c) d))
(get-type '(p q r . s))

(subst-other 'a)
(subst-other 'b)
(subst-other '(b))
(subst-other '())
(subst-other '(a (b c) d))
(subst-other '(p q r . s))
